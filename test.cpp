#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN

#include "include/doctest.h"

#include ".tests/data_structure/bitset.cpp"
#include ".tests/data_structure/disjoint_set_union.cpp"
#include ".tests/data_structure/fenwick_tree.cpp"
#include ".tests/data_structure/line_container.cpp"
#include ".tests/data_structure/range_table.cpp"
#include ".tests/data_structure/segment_tree.cpp"
#include ".tests/data_structure/treap.cpp"
#include ".tests/graph/centroid_decomposition.cpp"
#include ".tests/graph/dinic.cpp"
#include ".tests/graph/heavy_light_decomposition.cpp"
#include ".tests/graph/long_path_decomposition.cpp"
#include ".tests/graph/minimum_cost_flow.cpp"
#include ".tests/hashing/integral_hash.cpp"
#include ".tests/math/algebra/diophantine.cpp"
#include ".tests/math/algebra/fast_fourier_transform.cpp"
#include ".tests/math/algebra/matrix.cpp"
#include ".tests/math/algebra/polynomial.cpp"
#include ".tests/math/algebra/two_sat.cpp"
#include ".tests/math/combinatorics/combinatorics.cpp"
#include ".tests/math/combinatorics/exponentiate.cpp"
#include ".tests/math/geometry/point.cpp"
#include ".tests/math/geometry/polygon.cpp"
#include ".tests/math/geometry/segment.cpp"
#include ".tests/math/number_theory/dynamic_modular_integer.cpp"
#include ".tests/math/number_theory/extended_gcd.cpp"
#include ".tests/math/number_theory/miller_rabin.cpp"
#include ".tests/math/number_theory/modular_congruence.cpp"
#include ".tests/math/number_theory/modular_integer.cpp"
#include ".tests/math/number_theory/pollard_rho.cpp"
#include ".tests/math/number_theory/primitive_root.cpp"
#include ".tests/math/number_theory/sieve.cpp"
#include ".tests/sequence/kasai.cpp"
#include ".tests/sequence/manacher.cpp"
#include ".tests/sequence/prefix_function.cpp"
#include ".tests/sequence/sequence_hasher.cpp"
#include ".tests/sequence/suffix_array.cpp"
#include ".tests/sequence/suffix_automaton.cpp"
#include ".tests/sequence/z_function.cpp"
#include ".tests/utility/y_combinator.cpp"
